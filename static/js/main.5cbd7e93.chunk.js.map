{"version":3,"sources":["Components/Header.js","Context/ThemeContext.js","Colors.js","Components/ThemeToggler.js","Components/HeroSection.js","App.js","reportWebVitals.js","index.js"],"names":["Header","style","marginLeft","color","fontFamily","fontSize","ThemeContext","createContext","AppTheme","light","textColor","backgroundColor","border","dark","ThemeToggler","useContext","themeMode","setThemeMode","onClick","padding","HeroSection","theme","currentTheme","paddingBottom","textAlign","marginTop","font","App","themeHook","useState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0JAmBeA,EAjBA,WACb,OACE,iCACE,qBACEC,MAAO,CACLC,WAAY,OACZC,MAAO,UACPC,WAAY,eACZC,SAAU,QALd,0BAQgB,UCNPC,EALMC,wBACjB,CAAC,QAAS,eCaCC,EAhBE,CACbC,MAAO,CACHC,UAAW,OACXC,gBAAiB,OACjBC,OAAQ,kBAGZC,KAAM,CACFH,UAAW,OACXC,gBAAiB,OACjBC,OAAQ,oB,OCcDE,EArBM,WAEjB,MAAkCC,qBAAWT,GAA7C,mBAAOU,EAAP,KAAkBC,EAAlB,KAEA,OACI,qBAAKC,QAAU,WACXD,EAA2B,UAAdD,EAAwB,OAAS,UADlD,SAGI,wBAASf,MAAQ,CACbU,gBAAiB,UACjBQ,QAAS,aACTd,SAAU,OACVF,MAAO,QAJX,SAOmB,UAAda,EAAwB,YAAc,kBC6BxCI,EA1CK,WAEhB,IAAMC,EAAQN,qBAAWT,GAAc,GACjCgB,EAAed,EAASa,GAE9B,OACI,sBACApB,MAAO,CACJsB,cAAc,OACbZ,gBAAgB,GAAD,OAAKW,EAAaX,iBACjCR,MAAM,GAAD,OAAKmB,EAAaZ,WACvBc,UAAW,UALf,UAQI,qBACAvB,MAAO,CACHkB,QAAS,OACTM,UAAW,OACXC,KAAM,OACNrB,SAAU,OACVmB,UAAW,QANf,qBAOW,uBAPX,WAOwB,uBAPxB,IAO8B,sBAC9BvB,MAAQ,CACJI,SAAU,OACVD,WAAY,oBAHc,mCAP9B,OAaA,wBACAH,MAAQ,CACJW,OAAO,GAAD,OAAMU,EAAaV,SAF7B,SAKI,cAAC,EAAD,UCnBDe,EAbH,WACV,IAAMC,EAAYC,mBAAS,SAE3B,OACE,cAAC,EAAaC,SAAd,CAAuBC,MAAOH,EAA9B,SACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,UCAOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,K","file":"static/js/main.5cbd7e93.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1\r\n        style={{\r\n          marginLeft: \"10px\",\r\n          color: \"#383CC1\",\r\n          fontFamily: \"Noto Sans JP\",\r\n          fontSize: \"50px\",\r\n        }}\r\n      >\r\n        Theme Toggler{\" \"}\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createContext } from \"react\";\r\n\r\nconst ThemeContext = createContext(\r\n    [\"light\", () => {}]\r\n);\r\n\r\n\r\nexport default ThemeContext;","const AppTheme = {\r\n    light: {\r\n        textColor: \"#000\",\r\n        backgroundColor: \"#fff\",\r\n        border: \"2px solid #000\"\r\n\r\n    },\r\n    dark: {\r\n        textColor: \"#fff\",\r\n        backgroundColor: \"#333\",\r\n        border: \"2px dashed #000\"\r\n\r\n    }\r\n};\r\n\r\n\r\nexport default AppTheme;","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../Context/ThemeContext\";\r\n\r\nconst ThemeToggler = () => {\r\n\r\n    const [themeMode, setThemeMode] = useContext(ThemeContext);\r\n\r\n    return (\r\n        <div onClick={ () => {\r\n            setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\" )\r\n        } }>\r\n            <button  style= {{\r\n                backgroundColor: \"#26ae60\",\r\n                padding: \"10px 150px\",\r\n                fontSize: \"20px\",\r\n                color: \"#fff\",\r\n           \r\n            }}>\r\n                {themeMode === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThemeToggler;","import React, { useContext } from \"react\";\r\nimport ThemeContext from \"../Context/ThemeContext\";\r\nimport AppTheme from \"../Colors\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst HeroSection = () => {\r\n\r\n    const theme = useContext(ThemeContext)[0];\r\n    const currentTheme = AppTheme[theme];\r\n\r\n    return (\r\n        <div\r\n        style={{\r\n           paddingBottom:\"50px\",\r\n            backgroundColor: `${currentTheme.backgroundColor}`,\r\n            color: `${currentTheme.textColor}`,\r\n            textAlign: \"center\"\r\n        }} \r\n        >\r\n            <h1 \r\n            style={{\r\n                padding: \"1rem\",\r\n                marginTop: \"50px\",\r\n                font: \"bold\",\r\n                fontSize: \"65px\",\r\n                textAlign: \"left\"\r\n            }}>Welcome <br/> to the <br/> <span \r\n            style= {{\r\n                fontSize: \"90px\",\r\n                fontFamily: \"Fuggles, cursive\",\r\n            }}> World of Technology </span> </h1>\r\n            \r\n            <button \r\n            style= {{\r\n                border:  `${currentTheme.border}`\r\n           \r\n            }}>\r\n                <ThemeToggler/>\r\n            </button>\r\n\r\n            \r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default HeroSection;","import React, { useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport HeroSection from \"./Components/HeroSection\";\nimport ThemeContext from \"./Context/ThemeContext\";\n\nconst App = () => {\n  const themeHook = useState(\"light\");\n\n  return (\n    <ThemeContext.Provider value={themeHook}>\n      <div>\n        <Header />\n        <HeroSection />\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}